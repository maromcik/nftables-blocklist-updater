# .gitlab-ci.yml ─ GitLab 16/17-compatible (May 2025)
image: rust:1.87
stages:
  - test
  - build
  - package
  - release

# ---------- global settings ----------
variables:
  CARGO_TERM_COLOR: always
  # change these if you add or remove targets
  RUST_TARGETS: |
    x86_64-unknown-linux-gnu

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - target/
    - ~/.cargo/registry
    - ~/.cargo/git

# ---------- 1. fast checks on every commit ----------
test:
  stage: test
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check
    - rustup component add clippy
    - cargo clippy --all-targets -- -D warnings
    - cargo test --all
  tags:
    - alfonz

# ---------- 2. build each requested target ----------
.build-template: &build_template     # re-usable job definition
  stage: build
  needs: [ "test" ]
  image: rustembedded/cross:0.2.5    # cross = effortless cross-compiles
  script:
    - cross build --release --target $TARGET
  artifacts:
    paths:
      - target/$TARGET/release/${CI_PROJECT_NAME}${BINEXT}
    expire_in: 1 week

# one job per target
build:linux:
  <<: *build_template
  variables:
    TARGET: x86_64-unknown-linux-gnu
    BINEXT: ""                       # Linux → no extension
    # macOS → no extension
  tags:
    - alfonz
# ---------- 3. zip / tar.gz artifacts ----------
package:
  stage: package
  needs:
    - build:linux
  script:
    - mkdir dist
    - |
      for T in $RUST_TARGETS; do
        case "$T" in
          *windows*) ext="zip";   bin="${CI_PROJECT_NAME}.exe" ;;
          *)         ext="tar.gz"; bin="${CI_PROJECT_NAME}"     ;;
        esac
        mkdir -p "pkg/$T"
        cp "target/$T/release/$bin" "pkg/$T/"
        (cd pkg && tar -czf "../dist/${CI_PROJECT_NAME}-${T}.${ext}" "$T" 2>/dev/null || \
                           zip -j "../dist/${CI_PROJECT_NAME}-${T}.${ext}" "$T/$bin")
      done
  artifacts:
    paths:
      - dist/
    expire_in: One hour
  tags:
    - alfonz

# ---------- 4. create / update a GitLab Release ----------
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs: [ "package" ]
  rules:
    # run only when a semantic-version tag like v1.2.3 is pushed
    - if: '$CI_COMMIT_TAG =~ /^v\\d+\\.\\d+\\.\\d+$/'
  script:
    - echo "Publishing assets for $CI_COMMIT_TAG"
  release: # built-in keyword → GitLab creates the Release
    tag_name: '$CI_COMMIT_TAG'
    name: 'Release $CI_COMMIT_TAG'
    description: |
      Automated release generated by the CI pipeline for **$CI_COMMIT_TAG**.
    assets:
      links: # attach every file in dist/
        - name: Linux binary
          filepath: "dist/${CI_PROJECT_NAME}-x86_64-unknown-linux-gnu.tar.gz"
  tags:
    - alfonz