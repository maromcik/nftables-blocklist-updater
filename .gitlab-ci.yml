stages:
  - test
  - build
  - package
#  - release

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - target/
    - ~/.cargo/registry
    - ~/.cargo/git

test:
  stage: test
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check
    - rustup component add clippy
    - cargo clippy --all-targets -- -D warnings
    - cargo test --all
  tags:
    - alfonz

build:
  stage: build
  script:
    - rustup target add x86_64-unknown-linux-musl
    - cargo build --release --target=x86_64-unknown-linux-musl
  rules:
    - if: $CI_COMMIT_TAG
#  artifacts:
#    paths:
#      - target/x86_64-unknown-linux-musl/release/${CI_PROJECT_NAME}
#    expire_in: 1 hour
  tags:
    - alfonz


#package:
#  stage: package
#  needs: [ "build" ]
#  script:
#    - mkdir dist
#    - cp target/x86_64-unknown-linux-musl/release/${CI_PROJECT_NAME} dist/
#    - tar -czf dist/${CI_PROJECT_NAME}-linux.tar.gz -C dist ${CI_PROJECT_NAME}
#  rules:
#    - if: $CI_COMMIT_TAG
#  artifacts:
#    paths:
#      - dist/
#    expire_in: 1 hour
#  tags:
#    - alfonz

#release_job:
#  stage: release
#  needs:
#    - "package"
#  rules:
#    - if: $CI_COMMIT_TAG
#  # Install release-cli and then run it:
#  script:
#    - apt-get update && apt-get install -y curl
#    - curl -sL "https://gitlab.com/gitlab-org/release-cli/-/releases/v0.16.1/downloads/release-cli-linux-amd64" -o release-cli
#    - chmod +x release-cli
#    - mv release-cli /usr/local/bin/
#    - release-cli --version  # Optional: confirm it installed correctly
#    - echo "Publishing assets for $CI_COMMIT_TAG"
#  release:
#    tag_name: '$CI_COMMIT_TAG'
#    name: 'Release $CI_COMMIT_TAG'
#    description: |
#      Automated release generated by the CI pipeline for **$CI_COMMIT_TAG**.
#    assets:
#      links:
#        - name: Linux binary
#          filepath: "dist/${CI_PROJECT_NAME}-linux.tar.gz"
#  tags:
#    - alfonz
